<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><head><title>CreateAsync Method (uuid)</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/script_prototype.js"> </script><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/StyleUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/ElementCollection.js"> </script><script type="text/javascript" src="../scripts/MemberFilter.js"> </script><script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script><script type="text/javascript" src="../scripts/LanguageFilter.js"> </script><script type="text/javascript" src="../scripts/CookieDataStore.js"> </script><meta name="file" content="e3016190-5fce-a176-eaae-da922e4e55a7" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="M:Sage.SData.Client.Core.SDataBatchRequest.CreateAsync(System.String)" /><MSHelp:Keyword Index="A" Term="M:Sage.SData.Client.Core.SDataBatchRequest.CreateAsync(System.String)" /><MSHelp:Keyword Index="A" Term="frlrfSageSDataClientCoreSDataBatchRequestClassCreateAsyncTopic" /><MSHelp:Keyword Index="K" Term="CreateAsync method" /><MSHelp:Keyword Index="K" Term="SDataBatchRequest.CreateAsync method" /><MSHelp:Keyword Index="F" Term="CreateAsync" /><MSHelp:Keyword Index="F" Term="SDataBatchRequest.CreateAsync" /><MSHelp:Keyword Index="F" Term="Sage.SData.Client.Core.SDataBatchRequest.CreateAsync" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="Sage.SData.Client.dll" /><MSHelp:Attr Name="APIName" Value="Sage.SData.Client.Core..CreateAsync" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="Abstract" Value="Processes the request asynchronously" /></xml><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"></script></head><body><div id="control"><span class="productTitle">SData Client API</span><br /><span class="topicTitle">CreateAsync Method (uuid)</span><br /><div id="toolbar"><span id="chickenFeet"><a href="d4648875-d41a-783b-d5f4-638df39ee413.htm">Namespaces</a> ► <a href="b1cceb23-65f4-bdbd-4af9-d8e47dd99867.htm">Sage.SData.Client.Core</a> ► <a href="8df45990-ac80-2c98-e9a3-5ebf7d48608f.htm">SDataBatchRequest</a> ► <span class="selflink">CreateAsync(String)</span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();"><option value="CSharp cs">C#</option><option value="VisualBasic vb">Visual Basic</option><option value="ManagedCPlusPlus cpp">Visual C++</option></select></span></div></div><div id="main"><span style="color: DarkGray"> </span><div class="summary">
            Processes the request asynchronously
            </div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Declaration Syntax</div><div class="sectionContent"><div id="syntaxSection"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');">C#</td><td class="tab" x-lang="VisualBasic" onclick="toggleClass('syntaxTabs','x-lang','VisualBasic','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','VisualBasic','display','block','none');">Visual Basic</td><td class="tab" x-lang="ManagedCPlusPlus" onclick="toggleClass('syntaxTabs','x-lang','ManagedCPlusPlus','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','ManagedCPlusPlus','display','block','none');">Visual C++</td></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre><span class="keyword">public</span> <a href="2bfcb1ac-0645-9885-72cd-867f970bdb20.htm">AsyncRequest</a> <span class="identifier">CreateAsync</span>(
	<a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">string</a> <span class="parameter">uuid</span>
)</pre></div><div class="code" x-lang="VisualBasic"><pre><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">CreateAsync</span> ( _
	<span class="parameter">uuid</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">String</a> _
) <span class="keyword">As</span> <a href="2bfcb1ac-0645-9885-72cd-867f970bdb20.htm">AsyncRequest</a></pre></div><div class="code" x-lang="ManagedCPlusPlus"><pre><span class="keyword">public</span>:
<a href="2bfcb1ac-0645-9885-72cd-867f970bdb20.htm">AsyncRequest</a>^ <span class="identifier">CreateAsync</span>(
	<a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">String</a>^ <span class="parameter">uuid</span>
)</pre></div></div></div></div></div><div id="parameters"><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Parameters</div><div class="sectionContent"><dl paramName="uuid"><dt><span class="parameter">uuid</span> (<a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">String</a>)</dt><dd>unique identifier for the asynch transaction</dd></dl></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Return Value</div><div class="sectionContent">AsyncRequest object to manage the transaction</div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Examples</div><div class="sectionContent">
        <span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>The following code example demonstrates the usage of the SDataBatchRequest class.</div><div class="code"><pre>AtomFeed CreateBatchOperationAsync(SDataService service)
{
    <span class="highlight-comment">// create the BatchURL</span>
    SDataBatchRequest batchrequest = <span class="highlight-keyword">new</span> SDataBatchRequest(service);
    batchrequest.ResourceKind = <span class="highlight-literal">"products"</span>;

    <span class="highlight-comment">// the configuration above generates http://sdata.acme.com/sageApp/test/-/products/$batch </span>

    <span class="highlight-keyword">using</span> (BatchProcess batch = <span class="highlight-keyword">new</span> BatchProcess())
    {
        <span class="highlight-comment">// read the template for accounts</span>
        SDataTemplateResourceRequest templateResourceRequest = <span class="highlight-keyword">new</span> SDataTemplateResourceRequest(service);
        templateResourceRequest.ResourceKind = <span class="highlight-literal">"accounts"</span>;
        <span class="highlight-comment">// the above configuration generates http://sdata.acme.com/sdata/sageApp/test/-/accounts/$template </span>

        <span class="highlight-comment">// read the entry from the server</span>
        AtomEntry newEntry = templateResourceRequest.Read();

        SDataSingleResourceRequest insertRequest = <span class="highlight-keyword">new</span> SDataSingleResourceRequest(service);
        insertRequest.ContractName = <span class="highlight-literal">"test"</span>;
        <span class="highlight-comment">// empty Data set defaults to -</span>
        insertRequest.DataSet = <span class="highlight-keyword">string</span>.Empty;
        insertRequest.ResourceKind = <span class="highlight-literal">"accounts"</span>;
        <span class="highlight-comment">/*
         *  Do some stuff with the ntry
         */</span>

        insertRequest.Create();

        DeleteSingleReourceEntry(service);

        <span class="highlight-keyword">string</span> trackingID = System.Guid.NewGuid().ToString();



        <span class="highlight-comment">// build, submit and get</span>
        AtomFeed batchffed = batch.Commit();

        AsyncRequest asyncrequest = batchrequest.CreateAsync(trackingID);
        <span class="highlight-comment">// wait around until the response is ready</span>
        <span class="highlight-keyword">while</span> (asyncrequest.Response == <span class="highlight-keyword">null</span>)
        {
            Thread.Sleep(asyncrequest.PollingMilliseconds);
            <span class="highlight-comment">// check with the server again</span>
            asyncrequest.Refresh();
        }
        AtomFeed feed = asyncrequest.Response;
        <span class="highlight-keyword">return</span> feed;
    }
}</pre></div></span>
      </div></div><p><div id="footer"> </div>Assembly: <span sdata="assembly">Sage.SData.Client</span> (Module: Sage.SData.Client) Version: 1.0.0.764 (1.0.0.764)</p></div></body></html>